/*
Напишите SQL-запрос, который выведет все исходные столбцы + колонку balance, в которой будут отображаться остатки на счете после проведения операции.
Все операции проводились в соответствии с датой в колонке date. Если в одну дату было несколько операций, то они проводились в порядке следования id.
Итоговую таблицу отсортируйте по дате и id.
*/

select *, sum(money) over(order by date, id) as balance from transactions order by date, id 

/*
Напишите SQL-запрос, который выведет все исходные столбцы таблицы transactions + колонку balance, в которой будут отображаться остатки на счете после 
проведения операции. Нужно учесть, что на 1 января 2022 года на счетах компании было 10000 рублей, эти деньги также участвуют в расчете баланса.
Начальный баланс нужно также отразить в итоговой таблице с id равным 0, item равным "Начальный баланс" и суммой в 10000.
Итоговую таблицу отсортируйте по дате и id.
Таблицу transactions изменять нельзя.
*/

select *, sum(money) over(order by date, id) as balance 
from (
    (select 0 as id, '2022-01-01' as date, 'Начальный баланс' as item, 10000 as money from transactions)
    union
    (select * from transactions)
) table_temp
order by date, id

/*
В таблице ниже хранятся данные о доходах и расходах компании разбитые по годам и месяцам. Изначально компания мало зарабатывала и много тратила, 
поэтому инвесторам приходилось вкладывать в неё свои деньги. На данный момент компания приносит прибыль и наша задача посчитать, окупились ли вложения инвесторов.
Напишите SQL-запрос, который выведет все строки и столбцы исходной таблицы + дополнительный столбец (ror), в котором будет рассчитываться прибыль 
нарастающим итогом. Прибыль — это разница между доходами и расходами компании.
*/

select *, sum(income - outcome) over(order by year, month) as ror from revenues

/*
Кредитных денег должно хватить на бесперебойную работу бизнеса. Если в какой-то из месяцев расходы превышают доходы, то мы берем эту разницу из заемных средств.
Максимальный долг, который может образоваться, можно посмотреть в колонке, которая выводит прибыль нарастающим итогом.
Напишите SQL-запрос, который выведет один столбец (investment), содержащий одну единственную строку — величину кредита, который мы должны взять, чтобы покрыть 
все потенциальные убытки. Размер кредита будет со знаком минус.
Учитывайте, что ноябрь 2021 был убыточным, однако этот убыток был получен уже после того как инвестиции окупились.
*/

select min(investment) as investment from (select *, sum(income - outcome) over(order by year, month) as investment from revenues) temp_table

/*
В прошлой задаче мы рассчитали размер банковского кредита, который необходим для открытия новой точки. Теперь надо вычислить срок окупаемости инвестиций. 
Инвестиции окупаются в тот момент, когда суммарные доходы бизнеса превышают суммарные расходы.
Напишите SQL-запрос, который выведет один столбец (months), содержащий одну единственную строку — количество месяцев, через которое бизнес окупит все 
вложенные в него средства.
*/

select count(month) + 1 as months 
from (
    select *, sum(income - outcome) over(order by year, month) as investment from revenues
) temp_table
where investment < 0