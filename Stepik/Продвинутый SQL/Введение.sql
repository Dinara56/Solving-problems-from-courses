/*
Напишите SQL запрос, который выведет три колонки: месяц, год и общую сумму всех продаж. 
Последняя колонка должна называться total_revenue. Итоговые данные нужно отсортировать по году и месяцу.
*/

select month, year, sum(revenue) over() as total_revenue
from revenues

/*
Напишите SQL запрос, который выведет три колонки: месяц, год и сумму продаж за год.
Последняя колонка должна называться year_revenue.
Итоговые данные нужно отсортировать по году и месяцу.
*/

select month, year, sum(revenue) over(partition by year) as year_revenue
from revenues
order by year, month

/*
Напишите SQL запрос, который выведет три колонки: месяц, год и процентный вклад каждого месяца в итоги года.
Последняя колонка должна называться month_percent и данные в ней нужно округлить до 1 знака после десятичной точки.
Итоговые данные нужно отсортировать по году и месяцу.
*/

select month, year, 
round((sum(revenue) over(partition by month, year) / sum(revenue) over(partition by year)) * 100, 1) as month_percent 
from revenues
order by year, month

/*
Напишите SQL запрос, который выводит все столбцы таблицы + колонку с общим населением страны, в которой находится город. 
Колонка с общим населением должна называться country_population.
Итоговые данные отсортируйте по населению страны и по населению города в прямом порядке.
*/

select *, sum(population) over(partition by country) as country_population
from cities
order by country_population, population

/*
Напишите SQL-запрос, который выведет все столбцы исходной таблицы + дополнительный столбец с общей стоимостью всех 
товаров с учетом их количества. Последний столбец назовите total.
*/

select *, sum(count*price) over() as total 
from products

/*
Напишите SQL-запрос, который выведет все столбцы таблицы, плюс еще один столбец с процентом, который занимает 
товар в общей стоимости. Не забывайте, что каждый товар помимо цены имеет и количество.
Последний столбец назовите percent и округлите в нем данные до одного знака после десятичной точки.
Итоговые данные отсортируйте по проценту в обратном порядке.
Товары с одинаковой долей дополнительно отсортируйте по id.
Данный запрос позволит узнать в каких товарах «заморожена» большая часть наших активов.
*/

select *, round((sum(count * price) over(partition by name) / sum(count * price) over()) * 100, 1) as percent
from products
order by percent desc, id

/*
Напишите SQL запрос, который выводит все столбцы таблицы +2 колонки: одну с общим населением страны, в котором 
находится город, а вторую с процентом, который текущий город занимает в стране.
Колонка с общим населением должна называться country_population, а с процентом percent. Проценты нужно вывести 
с округлением до двух знаков после десятичной точки.
Итоговые данные отсортируйте по населению страны и по населению города в возрастающем порядке.
*/

select *, 
sum(population) over(partition by country) as country_population,
round(population * 100 / sum(population) over(partition by country), 2) as percent
from cities
order by country_population, population

/*
Напишите SQL запрос, который выводит все столбцы таблицы +колонку с процентом, который текущий город занимает в мире.
Колонка с процентом должна называться world_percent. Проценты нужно вывести с округлением до двух знаков после десятичной точки.
Итоговые данные отсортируйте по world_percent в обратном порядке, города с одинаковым значением world_percent 
дополнительно отсортируйте по id в прямом порядке.
*/

select *, 
round(population * 100/ sum(population) over(), 2) as world_percent
from cities
order by world_percent desc, id